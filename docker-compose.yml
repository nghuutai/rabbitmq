version: '3.7'

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - my-net
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
    volumes:
      - 'rabbitmq:/var/lib/rabbitmq'

  mongodb:
    container_name: mongodb
    image: 'mongo:4.2.7'
    ports:
      - "27017:27017"
    networks:
      - my-net
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongodb
      - MONGO_INITDB_ROOT_PASSWORD=mongodb
    volumes:
      - 'mongodb:/data/db'

  publisher:
    container_name: publisher
    image: 'node:12'
    working_dir: /app
    restart: on-failure
    ports: 
      - '3005:3005'
    depends_on:
      - rabbitmq
    networks:
      - my-net
    volumes:
      - ./publisher:/app
      - /app/node_modules
    command: 'sh -c "npm install && npm start"'

  server:
    container_name: server
    image: 'node:12'
    working_dir: /app
    restart: on-failure
    ports:
      - '1234:1234'
    depends_on:
      - rabbitmq
      - mongodb
    networks:
      - my-net
    volumes:
      - ./server:/app
      - /app/node_modules
    command: 'sh -c "yarn && yarn start:dev"'

  client:
    container_name: client
    build:
      context: ./client
    restart: on-failure
    ports:
      - 3000:3000
    depends_on:
      - server
    networks:
      - my-net
    volumes:
      - ./client:/app
      - /app/node_modules
    command: 'sh -c "yarn && yarn start"'


networks:
  my-net:
    driver: bridge

volumes:
  mongodb:
    driver: local
  rabbitmq:
    driver: local
