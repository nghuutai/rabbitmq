[{"/app/src/index.js":"1","/app/src/App.js":"2","/app/src/reportWebVitals.js":"3"},{"size":500,"mtime":1610635837000,"results":"4","hashOfConfig":"5"},{"size":2268,"mtime":1610891907000,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1610635837000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"aqd6k",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/app/src/index.js",[],["16","17"],"/app/src/App.js",["18","19"],"import React, { useState, useEffect } from 'react';\nimport { uuid } from 'uuidv4';\n\nimport socketIOClient from 'socket.io-client';\n\nconst ENDPOINT = 'http://localhost:1234';\nlet socket = socketIOClient(ENDPOINT);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      task: {},\n      id: '',\n    }\n  }\n\n  componentDidMount() {\n    const id = uuid();\n    socket.on('connect', () => {\n      socket.emit('USER_CONNECTION', { id, socketId: socket.id, status: 'ready' });\n    })\n\n    socket.on('TASK_ASSIGNMENT', (data) => {\n      console.log('13123424')\n      this.setState({\n        task: data,\n      });\n      console.log(data);\n    });\n    window.addEventListener('beforeunload', this.handleUnload);\n  }\n\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.handleUnload);\n  }\n\n  handleUnload = (e) => {\n    const { task } = this.state;\n    if (task.id) {\n      let result = {};\n      result = {\n        status: 'faile',\n        ...task,\n        count: task.count ? task.count + 1 : 1,\n      };\n      socket.emit('USER_CLOSE_TAB', {\n        socketId: socket.id,\n        status: 'ready'\n      }, result);\n    }\n  }\n\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  // handle task assigned\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { task } = this.state;\n    if (task.id) {\n      let result = {};\n      if (task.text % 2 === 0) {\n        result = {\n          status: 'oke',\n        }\n        this.setState({ task: {} })\n      } else {\n        result = {\n          status: 'faile',\n          ...task,\n          count: task.count ? task.count + 1 : 1,\n        }\n        this.setState({ task: {} })\n        console.log('failed');\n      }\n      socket.emit('TASK_HANDLER', {\n        socketId: socket.id,\n        status: 'ready'\n      }, result);\n    } else {\n      console.log('have not task');\n    }\n    \n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{ marginTop: '30px' }}>\n        <div>\n          <input name=\"input\" style={{ marginRight:'20px' }} onChange={this.handleChange} />\n          <button onClick={this.handleSubmit}>Submit</button>\n        </div>\n     </div>\n    )\n  }\n}\n\n\nexport default App;\n","/app/src/reportWebVitals.js",[],{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":1,"column":17,"nodeType":"26","messageId":"27","endLine":1,"endColumn":25},{"ruleId":"24","severity":1,"message":"28","line":1,"column":27,"nodeType":"26","messageId":"27","endLine":1,"endColumn":36},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]